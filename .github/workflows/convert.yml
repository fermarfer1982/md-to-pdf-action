name: Convert all Markdown to PDF

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # para poder hacer push

    container:
      image: pandoc/latex:latest   # Alpine + Pandoc + LaTeX

    steps:
      # 1Ô∏è‚É£ Instalar Git dentro del contenedor **antes** de todo
      - name: Install Git inside container
        run: |
          apk add --no-cache git

      # 2Ô∏è‚É£ Clonar el repo ya con Git presente
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # clonado completo (necesario para push)

      # 3Ô∏è‚É£ Generar los PDFs
      - name: Convert every .md in docs/ to PDF
        run: |
          mkdir -p dist
          for f in docs/*.md; do
            fname=$(basename "$f" .md)
            pandoc "$f" -o "dist/${fname}.pdf" --pdf-engine=xelatex
          done

      # 4Ô∏è‚É£ Commit y push de los PDFs
      - name: Push PDFs back to repo
        working-directory: ${{ github.workspace }}
        run: |
          # 1. Autoriza la ruta como segura para Git
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          # 2. Configura identidad
          git config --global user.name  "github-actions"
          git config --global user.email "actions@github.com"

          # 3. A√±ade PDFs, commit si hay cambios y push
          if [ -n "$(ls dist/*.pdf 2>/dev/null)" ]; then
            git add dist/*.pdf
            if ! git diff --quiet --staged; then
              git commit -m "chore: autogenerated PDFs"
              git push
            else
              echo "üî∏ No hay cambios nuevos en los PDFs"
            fi
          else
            echo "‚ö†Ô∏è  No se encontr√≥ ning√∫n PDF en dist/"
          fi